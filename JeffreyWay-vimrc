" My vimrc file

filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

Bundle 'kien/ctrlp.vim'
Bundle 'tomtom/tcomment_vim'
Bundle 'bling/vim-airline'
Bundle 'easymotion/vim-easymotion'
Bundle 'terryma/vim-multiple-cursors'

" Plugins for web developer
Bundle 'tpope/vim-surround'
Bundle 'rstacruz/sparkup'
Bundle 'scrooloose/nerdtree'
Bundle 'junegunn/vim-easy-align'
Bundle 'Chiel92/vim-autoformat'
Bundle 'vim-scripts/taglist.vim'
Bundle 'mileszs/ack.vim'
Bundle 'sjbach/lusty'
Bundle 'tobyS/pdv'
Bundle 'tobyS/vmustache'
Bundle 'SirVer/ultisnips'
Bundle 'honza/vim-snippets'
Bundle 'arnaud-lb/vim-php-namespace'


" Color Themes
Bundle 'flazz/vim-colorschemes'

""""""""""""""
"VIM CONFIG
""""""""""""""
if has('autocmd')
    filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
    syntax enable
endif

set shell=/bin/zsh
set history=1000
set undolevels=1000
set mouse=a
set nocompatible   " Disable vi-compatibility
set t_Co=256
colorscheme xoria256
set guifont=menlo\ for\ powerline:h16
set guioptions-=T " Removes top toolbar
set guioptions-=r " Removes right hand scroll bar
set go-=L " Removes left hand scroll bar
set linespace=15
set tabstop=2                   " a tab is four spaces
set softtabstop=2               " when hitting <BS>, pretend like a tab is removed, even if spaces
set shiftwidth=2                " number of spaces to use for autoindenting
set expandtab                   " expand tabs by default (overloadable per file type later)
set smarttab
set smartindent
set shiftround                  " use multiple of shiftwidth when indenting with '<' and '>'
set backspace=indent,eol,start  " allow backspacing over everything in insert mode
set foldenable
set foldmethod=indent
set foldlevelstart=14
set wildmenu
set wildmode=list:longest
set number                      " always show line numbers
set ignorecase                  " ignore case when searching
set smartcase                   " ignore case if search pattern is all lowercase,
set timeout timeoutlen=500 ttimeoutlen=0
set visualbell           " don't beep
set noerrorbells         " don't beep
set hidden
set tags=./tags,tags;$HOME
set splitbelow
set splitright
"Show (partial) command in the status line
set showcmd
set encoding=utf-8 " Necessary to show Unicode glyphs
set list                          " Show unprintable characters
set listchars=tab:▸\              " Char representing a tab
set listchars+=extends:❯          " Char representing an extending line
set listchars+=precedes:❮         " Char representing an extending line in
" the other direction
set listchars+=nbsp:␣             " Non breaking space
set listchars+=trail:·            " Show trailing spaces as dots
set showbreak=↪                   " Show wraped lines with this char
set scrolloff=3                   " Min. lines to keep above or below the
" cursor when scrolling
set ruler                         " Show current cursor position
" handle that
set scrolljump=5                  " Scroll more than one line
set wrap                          " Wrap long lines
set incsearch                     " Perform incremental searching
set hlsearch                      " Highlight search matches
set visualbell                    " Disable annoying beep
set linebreak                     " Don't break lines in the middle of words
set fillchars+=vert:\             " Don't show pipes in vertical splits

highlight Search cterm=underline

" Set comma is the leader
let mapleader = ','

" Make it easy to edit the Vimrc file.
nmap <Leader>ev :tabedit $MYVIMRC<cr>

" Disable arrow keys
map <Left> <Nop>
map <Right> <Nop>
map <Up> <Nop>
map <Down> <Nop>

imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Open splits
nmap vs :vsplit<cr>
nmap sp :split<cr>

" Make Alt key working

let c='a'
while c <= 'z'
exec "set <A-".c.">=\e".c
exec "imap \e".c." <A-".c.">"
  let c = nr2char(1+char2nr(c))
endw

set timeout ttimeoutlen=50

"
" Plugins config
"

" CtrlP
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/node_modules/*
set wildignore+=*/vendor/**
set wildignore+=*/public/forum/**

" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

let g:airline_theme='dark'

" vim-easy-align
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

" NerdTree
map <C-a> :NERDTreeToggle<CR>

" Taglist
map <M-t> :TlistToggle<CR>

" Lusty
map <C-l> :LustyBufferGrep<CR>
map <M-l> :LustyBufferExplorer<CR>

" Pdv
let g:pdv_template_dir = $HOME ."/.vim/bundle/pdv/templates_snip"
"nnoremap <C-p> :call pdv#DocumentCurrentLine()<CR>
nnoremap <C-c> :call pdv#DocumentWithSnip()<CR>

" Ultisnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<M-n>"
let g:UltiSnipsJumpBackwardTrigger="<M-p>"

" Vim-php-namespace
function! IPhpInsertUse()
  call PhpInsertUse()
  call feedkeys('a',  'n')
endfunction

autocmd FileType php inoremap <Leader>u <Esc>:call IPhpInsertUse()<CR>
autocmd FileType php noremap <Leader>u :call PhpInsertUse()<CR>

function! IPhpExpandClass()
  call PhpExpandClass()
  call feedkeys('a', 'n')
endfunction

autocmd FileType php inoremap <Leader>e <Esc>:call IPhpExpandClass()<CR>
autocmd FileType php noremap <Leader>e :call PhpExpandClass()<CR>

